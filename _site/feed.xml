<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-10-31T23:57:55+09:00</updated><id>http://localhost:4000/</id><title type="html">pkch’s Portfolio</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">다빈치 SW 메이커 페스티벌</title><link href="http://localhost:4000/project/2018/10/29/Davinch-Makerthon/" rel="alternate" type="text/html" title="다빈치 SW 메이커 페스티벌" /><published>2018-10-29T14:00:00+09:00</published><updated>2018-10-29T14:00:00+09:00</updated><id>http://localhost:4000/project/2018/10/29/Davinch-Makerthon</id><content type="html" xml:base="http://localhost:4000/project/2018/10/29/Davinch-Makerthon/">&lt;p&gt;다빈치 SW 메이커 페스티벌 &amp;lt;청춘어람&amp;gt; (by 멋쟁이청년처럼)&lt;/p&gt;

&lt;p&gt;주제 : 공공데이터와 공간정보를 이용한 세상을 이롭게 하는 서비스&lt;/p&gt;

&lt;h2 id=&quot;environment&quot;&gt;Environment&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;frontend&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;backend&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;DB&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;react.js &amp;amp; sass&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Node.js &amp;amp; Koa&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;MongoDB&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;member&quot;&gt;Member&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;정다은&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;박경철&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;노우제&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;팀장, 기획&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;back-end &amp;amp; DB design&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;front-end &amp;amp; UI/UX design&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;참가-개요&quot;&gt;참가 개요&lt;/h2&gt;

&lt;h3 id=&quot;작품-소개&quot;&gt;작품 소개&lt;/h3&gt;

&lt;p&gt;취업 준비생 청년 정책으로 대전시에는 월 30만원 지원해주는 ‘청년희망카드’라는 것이 있고 부산시에는 ‘청년디딤돌카드’라는 것이 있습니다.&lt;/p&gt;

&lt;p&gt;또 이런 경제적인 지원 뿐만 아니라 각 시에서 제공하는 주택 지원이나 창업 또는 일자리 지원들이 많습니다.&lt;/p&gt;

&lt;p&gt;정부 및 지차체에서 제공하는 질 좋은 강연이나 정책들이 많음에도 불구하고 잘 몰라서 혜택을 받지 못하는 청년들이 많습니다.&lt;/p&gt;

&lt;p&gt;이에 ‘청년 취업 정책 API’와 ‘청년 창업 정책 API’ 등 공공데이터를 사용하여 청년정책모음 사이트를 구현하여 청년 간 정보 격차를 줄이고 정부의 청년 정책을 홍보하고자 합니다.&lt;/p&gt;

&lt;h2 id=&quot;기능&quot;&gt;기능&lt;/h2&gt;

&lt;h2 id=&quot;db-설계&quot;&gt;DB 설계&lt;/h2&gt;

&lt;h2 id=&quot;ui-설계&quot;&gt;UI 설계&lt;/h2&gt;</content><author><name></name></author><category term="project" /><summary type="html">다빈치 SW 메이커 페스티벌 &amp;lt;청춘어람&amp;gt; (by 멋쟁이청년처럼)</summary></entry><entry><title type="html">Spring</title><link href="http://localhost:4000/tech_stack/2018/10/29/spring/" rel="alternate" type="text/html" title="Spring" /><published>2018-10-29T13:43:00+09:00</published><updated>2018-10-29T13:43:00+09:00</updated><id>http://localhost:4000/tech_stack/2018/10/29/spring</id><content type="html" xml:base="http://localhost:4000/tech_stack/2018/10/29/spring/">&lt;h2 id=&quot;spring-mvc&quot;&gt;Spring MVC&lt;/h2&gt;

&lt;h2 id=&quot;spring-security&quot;&gt;Spring Security&lt;/h2&gt;

&lt;h2 id=&quot;spring-data&quot;&gt;Spring Data&lt;/h2&gt;

&lt;h3 id=&quot;spring-jdbc&quot;&gt;Spring JDBC&lt;/h3&gt;

&lt;h3 id=&quot;mybatis&quot;&gt;Mybatis&lt;/h3&gt;

&lt;h3 id=&quot;jpa--hibernate&quot;&gt;JPA &amp;amp; Hibernate&lt;/h3&gt;</content><author><name></name></author><category term="tech_stack" /><summary type="html">Spring MVC</summary></entry><entry><title type="html">Collathon</title><link href="http://localhost:4000/project/2018/10/29/Collathon/" rel="alternate" type="text/html" title="Collathon" /><published>2018-10-29T13:40:00+09:00</published><updated>2018-10-29T13:40:00+09:00</updated><id>http://localhost:4000/project/2018/10/29/Collathon</id><content type="html" xml:base="http://localhost:4000/project/2018/10/29/Collathon/"></content><author><name></name></author><category term="project" /><summary type="html"></summary></entry><entry><title type="html">Java</title><link href="http://localhost:4000/tech_stack/2018/10/29/java/" rel="alternate" type="text/html" title="Java" /><published>2018-10-29T13:31:00+09:00</published><updated>2018-10-29T13:31:00+09:00</updated><id>http://localhost:4000/tech_stack/2018/10/29/java</id><content type="html" xml:base="http://localhost:4000/tech_stack/2018/10/29/java/">&lt;p&gt;자바는 제가 컴퓨터공학에 처음 입문했을 때부터 다뤘던 프로그래밍 언어입니다. (2016.09월부터 사용)&lt;/p&gt;

&lt;p&gt;얼마 전까지 주로 &lt;em&gt;이클립스&lt;/em&gt; 를 통해 Java 코딩을 주로 했으나 최근에 (2018.8월 이후) IntelliJ 학생인증을 받아 학생 라이센스로 &lt;em&gt;IntelliJ&lt;/em&gt; 를 사용해보고 있습니다.&lt;/p&gt;

&lt;p&gt;자바의 객체지향언어적 특징에 대해 이해하고 있으며 이를 활용해 Override, Overload (다형성 구현)을 적용할 수 있으며 extends와 implements의 차이점을 알고 상황에 맞게 적절히 구현할 수 있습니다.&lt;/p&gt;

&lt;p&gt;자바의 Collection 프레임워크에 대해 이해하고 있으며 이를 상황에 맞게 적절히 사용할 수 있습니다.&lt;/p&gt;

&lt;p&gt;※ Collection 프레임워크?&lt;/p&gt;

&lt;p&gt;Java에서 다수의 데이터를 효과적으로 제어하기 위해 표준화된 방법을 제공하는 객체의 집합입니다. List, Map, Set 등이 대표적인 예입니다.&lt;/p&gt;

&lt;p&gt;또한, JDBC를 활용하여 DataSource 객체를 받은 후 Connection을 얻어내 DB와 연결할 수 있습니다. 이와 더불어PreparedStatement와 ResultSet 객체의 조작이 가능합니다.&lt;/p&gt;

&lt;p&gt;try-catch-finally를 활용하여 예외 처리를 할 수 있습니다.
또한 Java 7에서 새롭게 등장한 try-with-resource 기능을 활용할 수 있습니다.&lt;/p&gt;

&lt;p&gt;가장 오랫동안 사용하여 익숙한 언어이기 때문에 알고리즘 문제를 풀 때 주로 자바를 활용하고 있습니다. &lt;a href=&quot;https://github.com/pkch93/Algorithm&quot;&gt;자바 알고리즘 풀이저장소 보기 &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;그외에 제네릭, enum 타입 등을 이해하고 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;java-8&quot;&gt;Java 8&lt;/h2&gt;

&lt;p&gt;Java에서 가장 혁신적인 변화가 일어난 8 버전을 이해하고 실제 코딩으로 적용해보려고 노력하고 있습니다.&lt;/p&gt;

&lt;p&gt;Java 8의 가장 큰 특징은 함수형 언어가 가지고 있는 Lambda식을 Java에서 적용할 수 있다는 점과 Stream API 일 것입니다. 저는 FunctionalInterface를 통해 Lambda식을 적용하는 방법과 Collection 객체에서 Stream을 사용하는 방법에 큰 관심을 가지고 학습, 적용하고 있습니다.&lt;/p&gt;

&lt;p&gt;또한 자바 8의 메소드 레퍼런스, Optional&amp;lt;E&amp;gt;도 함께 학습하고 주로 사용하고 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;jsp--servlet&quot;&gt;JSP &amp;amp; Servlet&lt;/h2&gt;

&lt;p&gt;Servlet은 Java EE에서 주로 웹페이지를 생성하기 위해 사용되는 Java 클래스입니다. 저는 Servlet의 생명주기 (init -&amp;gt; Service -&amp;gt; Destroy)를 이해하고 있으며 JSP의 탄생배경을 이해하고 있습니다.&lt;/p&gt;

&lt;p&gt;또한 JSP에서 자바코드를 사용하게 해주는 스크립트릿(&amp;lt;% … %&amp;gt;)과 표현식(&amp;lt;%= … %&amp;gt;), 선언식 (&amp;lt;%@ … %&amp;gt;)등을 이해하고 있으며 JSTL을 JSP와 함께 활용할 수 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;junit4&quot;&gt;JUnit4&lt;/h2&gt;

&lt;p&gt;견고한 어플리케이션을 위해서는 단위 테스트를 활용하는 것이 중요합니다.&lt;/p&gt;

&lt;p&gt;JUnit의 실행 절차를 알고 assert static 메소드와 함께 데이터 테스트 등을 구현할 수 있습니다.&lt;/p&gt;</content><author><name></name></author><category term="tech_stack" /><summary type="html">자바는 제가 컴퓨터공학에 처음 입문했을 때부터 다뤘던 프로그래밍 언어입니다. (2016.09월부터 사용)</summary></entry><entry><title type="html">DB</title><link href="http://localhost:4000/tech_stack/2018/10/29/DB/" rel="alternate" type="text/html" title="DB" /><published>2018-10-29T13:29:00+09:00</published><updated>2018-10-29T13:29:00+09:00</updated><id>http://localhost:4000/tech_stack/2018/10/29/DB</id><content type="html" xml:base="http://localhost:4000/tech_stack/2018/10/29/DB/">&lt;p&gt;데이터베이스 수업을 통해 SQL과 DBMS에 대하여 교육받았습니다.&lt;/p&gt;

&lt;p&gt;처음 접한 DB는 Oracle 11g (수업을 통해 처음 입문)이나 세계적으로 많이 쓰이는 MySQL을 잘 다뤄보고 싶어 공부하고 실제로 사용해보았습니다.&lt;/p&gt;

&lt;p&gt;데이터베이스를 사용할 때 주로 SQL을 다루는 RDB(관계형 데이터베이스)를 사용합니다. 대부분 MySQL을 사용하였으며 Postgresql은 최근에 관심을 가지게 되어 학습하고 있습니다.&lt;/p&gt;

&lt;p&gt;SQL로는 DDL을 활용하여 테이블 생성 및 수정, 삭제 할 수 있으며 CONSTRAINT로 제약사항을 스키마에 넣을 수 있습니다. 또한 DML로 데이터 CRUD와 간단한 JOIN을 구현할 수 있습니다.&lt;/p&gt;

&lt;p&gt;SQL과 관련한 자격증으로 SQLD를 취득했습니다. (한국데이터진흥원 주관, 2017.12.29 취득)&lt;/p&gt;

&lt;p&gt;이밖에 최근에 NoSQL 진영에서 각광받는 MongoDB에도 큰 관심을 가지고 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;rdbms&quot;&gt;RDBMS&lt;/h2&gt;

&lt;p&gt;제가 다룰 줄 아는 RDB로 MySQL과 Postgresql이 있습니다. 실질적으로 Postgresql는 학습만 했기 때문에 프로젝트에서는 MySQL을 주로 사용했습니다.&lt;/p&gt;

&lt;h3 id=&quot;mysql&quot;&gt;MySQL&lt;/h3&gt;

&lt;p&gt;MySQL로 DDL과 DML을 사용하여 스키마 조작 및 데이터 조회를 할 수 있습니다. 특히 JDBC와 연계하여 MySQL을 다뤄봤습니다.&lt;/p&gt;

&lt;p&gt;아래는 Spring에서 MySQL Driver를 로드하여 Application과 MySQL을 연결한 코드입니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;  &lt;span class=&quot;nd&quot;&gt;@Bean&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DataSource&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;dataSource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;DriverManagerDataSource&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DriverManagerDataSource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setDriverClassName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.mysql.cj.jdbc.Driver&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;jdbc:mysql://localhost:3306/ood?&quot;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;SSLuse=false&amp;amp;serverTimezone=UTC&amp;amp;&quot;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;useUnicode=true&amp;amp;characterEncoding=utf8&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setUsername&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;park&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setPassword&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1234&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;MySQL에 접속하기 위해 setUrl 메소드의 내용과 같이 url을 작성합니다. 이 때 제가 쓴 MySQL 버전이 8.0.11인데 MySQL 5.7 이상에서는 SSL을 적용해야 DB에 접근가능합니다. 따라서 개발시 SSL 제약사항을 없애기 위해 잠시 QueryString로 SSLuse=false 설정을 해주었습니다.&lt;/p&gt;

&lt;p&gt;아래는 위와 같이 연결한 MySQL에 있는 데이터를 조작하기 위한 Mybatis Mapper xml 코드입니다. (account 정보 조작)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE mapper
  PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;
  &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;mapper&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;namespace=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.moviereserve.park.DAO.AccountDAO&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;insert&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;create&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  	INSERT INTO ACCOUNT VALUES
  	(#{accountId}, #{accountPw}, #{accountName},
  	#{phone}, #{address}, #{isAdmin})
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/insert&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;select&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;read&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;resultType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.moviereserve.park.DTO.Account&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  	SELECT * FROM ACCOUNT WHERE ACCOUNTID = #{accountId}
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;delete&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;delete&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  	DELETE FROM ACCOUNT WHERE ACCOUNTID = #{accountId}
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/delete&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;select&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;login&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;resultType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.moviereserve.park.DTO.Account&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  	SELECT * FROM ACCOUNT WHERE ACCOUNTID = #{accountId} and ACCOUNTPW = #{accountPw}
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/mapper&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;위와 같이 SQL을 사용하여 가입, 조회, 로그인, 탈퇴를 구현할 수 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;nosql&quot;&gt;NoSQL&lt;/h2&gt;

&lt;h3 id=&quot;mongodb&quot;&gt;MongoDB&lt;/h3&gt;

&lt;p&gt;저는 MongoDB의 Collection, Document, SubDocument에 대해 이해하고 있습니다. 이를 통해 MongoDB로 Document를 만들 수 있습니다. 또한 MongoDB에서 제공하는 다양한 쿼리함수를 활용하여 데이터를 조작할 수 있습니다.&lt;/p&gt;

&lt;p&gt;Node.js에서 MongoDB를 활용하기 좋은 환경을 제공하므로 (mongoose API를 활용) 현재 Node.js의 Koa와 함께 MongoDB를 다뤄보고 있습니다.&lt;/p&gt;</content><author><name></name></author><category term="tech_stack" /><summary type="html">데이터베이스 수업을 통해 SQL과 DBMS에 대하여 교육받았습니다.</summary></entry><entry><title type="html">React</title><link href="http://localhost:4000/tech_stack/2018/10/29/react/" rel="alternate" type="text/html" title="React" /><published>2018-10-29T13:04:12+09:00</published><updated>2018-10-29T13:04:12+09:00</updated><id>http://localhost:4000/tech_stack/2018/10/29/react</id><content type="html" xml:base="http://localhost:4000/tech_stack/2018/10/29/react/">&lt;h2 id=&quot;redux&quot;&gt;Redux&lt;/h2&gt;

&lt;h2 id=&quot;react-router&quot;&gt;React-Router&lt;/h2&gt;</content><author><name></name></author><category term="tech_stack" /><summary type="html">Redux</summary></entry><entry><title type="html">node.js</title><link href="http://localhost:4000/tech_stack/2018/10/29/nodejs/" rel="alternate" type="text/html" title="node.js" /><published>2018-10-29T13:00:01+09:00</published><updated>2018-10-29T13:00:01+09:00</updated><id>http://localhost:4000/tech_stack/2018/10/29/nodejs</id><content type="html" xml:base="http://localhost:4000/tech_stack/2018/10/29/nodejs/">&lt;h2 id=&quot;koa&quot;&gt;Koa&lt;/h2&gt;

&lt;h2 id=&quot;npm&quot;&gt;npm&lt;/h2&gt;</content><author><name></name></author><category term="tech_stack" /><summary type="html">Koa</summary></entry><entry><title type="html">ruby on rails</title><link href="http://localhost:4000/tech_stack/2018/10/29/ruby-on-rails/" rel="alternate" type="text/html" title="ruby on rails" /><published>2018-10-29T13:00:00+09:00</published><updated>2018-10-29T13:00:00+09:00</updated><id>http://localhost:4000/tech_stack/2018/10/29/ruby-on-rails</id><content type="html" xml:base="http://localhost:4000/tech_stack/2018/10/29/ruby-on-rails/"></content><author><name></name></author><category term="tech_stack" /><summary type="html"></summary></entry><entry><title type="html">Web Standard</title><link href="http://localhost:4000/tech_stack/2018/10/29/web-standard/" rel="alternate" type="text/html" title="Web Standard" /><published>2018-10-29T12:58:00+09:00</published><updated>2018-10-29T12:58:00+09:00</updated><id>http://localhost:4000/tech_stack/2018/10/29/web-standard</id><content type="html" xml:base="http://localhost:4000/tech_stack/2018/10/29/web-standard/">&lt;h2 id=&quot;html5&quot;&gt;HTML5&lt;/h2&gt;

&lt;h2 id=&quot;css3&quot;&gt;CSS3&lt;/h2&gt;

&lt;h2 id=&quot;javascript&quot;&gt;Javascript&lt;/h2&gt;

&lt;h3 id=&quot;es6&quot;&gt;ES6&lt;/h3&gt;

&lt;h3 id=&quot;jquery&quot;&gt;jQuery&lt;/h3&gt;</content><author><name></name></author><category term="tech_stack" /><summary type="html">HTML5</summary></entry><entry><title type="html">멋쟁이사자처럼 해커톤</title><link href="http://localhost:4000/project/2018/10/29/likelion-hackerthon/" rel="alternate" type="text/html" title="멋쟁이사자처럼 해커톤" /><published>2018-10-29T11:36:30+09:00</published><updated>2018-10-29T11:36:30+09:00</updated><id>http://localhost:4000/project/2018/10/29/likelion-hackerthon</id><content type="html" xml:base="http://localhost:4000/project/2018/10/29/likelion-hackerthon/">&lt;p&gt;멋쟁이사자처럼 해커톤 프로젝트 &lt;strong&gt;궁금한 강사&lt;/strong&gt; by &amp;lt;!DOCTYPE&amp;gt;&lt;/p&gt;

&lt;h2 id=&quot;environment&quot;&gt;Environment&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;front-end&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;back-end&lt;/th&gt;
      &lt;th&gt;DB&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;html5 &amp;amp; css3 &amp;amp; javascript &amp;amp; jquery&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;ruby on rails&lt;/td&gt;
      &lt;td&gt;SQLite&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;member&quot;&gt;Member&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;이세록&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;박경철&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;김유리&lt;/th&gt;
      &lt;th&gt;이동혁&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;기획 &amp;amp; front-end&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;개발 총괄 (front-end &amp;amp; back-end)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;UI Design &amp;amp; front-end&lt;/td&gt;
      &lt;td&gt;back-end&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;개발-개요&quot;&gt;개발 개요&lt;/h2&gt;

&lt;p&gt;일반적으로 강사들이 자신의 강의에 대한 피드백을 받아보기 어렵습니다.&lt;/p&gt;

&lt;p&gt;일부 강사들은 피드백을 받기 위해서 아르바이트를 고용하면서까지 피드백을 받아보려 하고 있습니다.&lt;/p&gt;

&lt;p&gt;이런 강사들의 불편을 덜어주기 위한 아이디어로 ‘궁금한 강사’를 생각했습니다.&lt;/p&gt;

&lt;p&gt;강사들이 강연 말미에 페이지 url 또는 QR코드를 관객에게 제공하여 관객들이 연령대, 배경지식과 같은 최소한의 정보만을 입력하여 리뷰를 작성하게하고 그 리뷰는 강사와 해당 강사의 강연을 궁금해하는 일반 사용자들이 참고할 수 있는 서비스를 생각하였습니다.&lt;/p&gt;

&lt;h2 id=&quot;db-설계&quot;&gt;DB 설계&lt;/h2&gt;

&lt;h2 id=&quot;구현-기능&quot;&gt;구현 기능&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;제가 구현한 기능 위주로 작성하였습니다.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;로그인-및-로그아웃&quot;&gt;로그인 및 로그아웃&lt;/h3&gt;

&lt;p&gt;devise gem을 쓰지 않고 session을 사용하여 직접 구현하였습니다.&lt;/p&gt;

&lt;p&gt;회원의 아이디는 lec_id라는 이름으로, 비밀번호는 lec_pw로 받아 검증합니다.&lt;/p&gt;

&lt;p&gt;만약 아이디가 없거나, 있더라도 비밀번호가 다른 경우 &lt;em&gt;flash attribute&lt;/em&gt; 를 활용하여 “아이디 또는 비밀번호가 일치하지 않습니다”라는 경고 메세지를 login 창에 띄워줍니다.&lt;/p&gt;

&lt;p&gt;그렇지 않다면 session에 id라는 key안에 회원의 아이디를 넣어 로그인을 구현합니다.&lt;/p&gt;

&lt;p&gt;로그인 완료시 홈 화면으로 돌아갑니다.&lt;/p&gt;

&lt;p&gt;아래는 로그인을 구현한 코드입니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;logincheck&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;lec_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:lec_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;lec_pw&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:lec_pw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Lecturer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find_by&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;lec_id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lec_id&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pw&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lec_pw&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lec_id&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;redirect_to&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/'&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;flash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;아이디 또는 비밀번호가 일치하지 않습니다.&quot;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;login&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;로그아웃은 단순히 해당 회원이 접속한 브라우저의 session[:id] 값을 null로 만들어 구현하였습니다.&lt;/p&gt;

&lt;p&gt;로그아웃 이후에는 홈 화면으로 넘어갑니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;logout&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@current_user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;redirect_to&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/'&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;회원가입&quot;&gt;회원가입&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@lecturer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Lecturer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lecturer_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@lecturer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;phone&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:phone1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:phone2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:phone3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@lecturer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;@&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:email_domain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;lecturer_categories&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:lecturer_categories&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;permit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:category&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;respond_to&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@lecturer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;save&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;lecturer_categories&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:category&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;,&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ctg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
          &lt;span class=&quot;no&quot;&gt;LecturerCategory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;lecturer_id: &lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@lecturer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;category: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ctg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;save&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redirect_to&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@lecturer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;notice: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Lecturer was successfully created.'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;status: :created&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;location: &lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@lecturer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:new&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;json: &lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@lecturer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;errors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;status: :unprocessable_entity&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;회원-정보-수정&quot;&gt;회원 정보 수정&lt;/h3&gt;

&lt;h3 id=&quot;회원-탈퇴&quot;&gt;회원 탈퇴&lt;/h3&gt;

&lt;h3 id=&quot;아이디--비밀번호-찾기&quot;&gt;아이디 / 비밀번호 찾기&lt;/h3&gt;

&lt;h3 id=&quot;강연-등록--수정--삭제&quot;&gt;강연 등록 &amp;amp; 수정 &amp;amp; 삭제&lt;/h3&gt;

&lt;h3 id=&quot;리뷰-작성&quot;&gt;리뷰 작성&lt;/h3&gt;

&lt;h3 id=&quot;강사-검색&quot;&gt;강사 검색&lt;/h3&gt;

&lt;h3 id=&quot;강연-목록-보기&quot;&gt;강연 목록 보기&lt;/h3&gt;

&lt;h2 id=&quot;시연-화면&quot;&gt;시연 화면&lt;/h2&gt;</content><author><name></name></author><category term="project" /><summary type="html">멋쟁이사자처럼 해커톤 프로젝트 궁금한 강사 by &amp;lt;!DOCTYPE&amp;gt;</summary></entry></feed>